{"version":3,"file":"Badge.es.js","sources":["../src/components/Badge/styles.ts","../src/components/Badge/Badge.tsx"],"sourcesContent":["import { cva } from \"class-variance-authority\";\nimport { BUIComponentColor, BUITheme } from \"../../../types/component\";\n\nexport type BadgeColor = BUIComponentColor | \"info\" | \"secondary\";\n\nconst BadgeVariants = (props: { theme?: BUITheme; color: BadgeColor }) => {\n  const color = {\n    dark: {\n      primary: \"bg-dark-badge-primary-bg text-dark-primary\",\n      secondary: \"bg-dark-badge-secondary-bg text-dark-secondary\",\n      danger: \"bg-dark-badge-danger-bg text-dark-danger\",\n      success: \"bg-dark-badge-success-bg text-dark-success\",\n      warning: \"bg-dark-badge-warning-bg text-dark-warning\",\n      info: \"bg-dark-badge-info-bg text-dark-label-tertiary\",\n    },\n    light: {\n      primary: \"bg-light-badge-primary-bg text-light-primary\",\n      secondary: \"bg-light-badge-secondary-bg text-light-secondary\",\n      danger: \"bg-light-badge-danger-bg text-light-danger\",\n      success: \"bg-light-badge-success-bg text-light-success\",\n      warning: \"bg-light-badge-warning-bg text-light-warning\",\n      info: \"bg-light-badge-info-bg text-light-label-tertiary\",\n    },\n  };\n\n  const { theme = \"light\" } = props;\n\n  return cva(\"rounded px-[10px] py-[5px] text-[12px]\", {\n    variants: {\n      color: {\n        primary: color[theme].primary,\n        secondary: color[theme].secondary,\n        danger: color[theme].danger,\n        success: color[theme].success,\n        warning: color[theme].warning,\n        info: color[theme].info,\n      },\n    },\n    defaultVariants: {\n      color: \"primary\",\n    },\n  })(props);\n};\n\nexport default BadgeVariants;\n","import { BUITheme } from \"../../../types/component\";\nimport { cn } from \"../../utils/utils\";\nimport BadgeVariants, { BadgeColor } from \"./styles\";\n\nexport interface BadgeProps {\n  /**\n   * BUI theme\n   */\n  theme?: BUITheme;\n  /**\n   * Badge color\n   */\n  color?: BadgeColor;\n  /**\n   * Badge contents\n   */\n  decoration?: boolean;\n  /**\n   * Badge contents\n   */\n  label: string;\n}\n\nexport const Badge = ({\n  theme = \"light\",\n  color = \"primary\",\n  decoration = true,\n  label,\n}: BadgeProps) => {\n  return (\n    <span className={`${cn(BadgeVariants({ theme, color }))}`}>\n      {decoration && `â€¢ `}\n      {label}\n    </span>\n  );\n};\n"],"names":["BadgeVariants","props","color","theme","cva","Badge","decoration","label","jsxs","cn"],"mappings":";;AAKA,MAAMA,IAAgB,CAACC,MAAmD;AACxE,QAAMC,IAAQ;AAAA,IACZ,MAAM;AAAA,MACJ,SAAS;AAAA,MACT,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AAAA,IACA,OAAO;AAAA,MACL,SAAS;AAAA,MACT,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,MAAM;AAAA,IACR;AAAA,EAAA,GAGI,EAAE,OAAAC,IAAQ,QAAY,IAAAF;AAE5B,SAAOG,EAAI,0CAA0C;AAAA,IACnD,UAAU;AAAA,MACR,OAAO;AAAA,QACL,SAASF,EAAMC,CAAK,EAAE;AAAA,QACtB,WAAWD,EAAMC,CAAK,EAAE;AAAA,QACxB,QAAQD,EAAMC,CAAK,EAAE;AAAA,QACrB,SAASD,EAAMC,CAAK,EAAE;AAAA,QACtB,SAASD,EAAMC,CAAK,EAAE;AAAA,QACtB,MAAMD,EAAMC,CAAK,EAAE;AAAA,MACrB;AAAA,IACF;AAAA,IACA,iBAAiB;AAAA,MACf,OAAO;AAAA,IACT;AAAA,EAAA,CACD,EAAEF,CAAK;AACV,GCnBaI,IAAQ,CAAC;AAAA,EACpB,OAAAF,IAAQ;AAAA,EACR,OAAAD,IAAQ;AAAA,EACR,YAAAI,IAAa;AAAA,EACb,OAAAC;AACF,MAEIC,gBAAAA,EAAA,KAAC,QAAK,EAAA,WAAW,GAAGC,EAAGT,EAAc,EAAE,OAAAG,GAAO,OAAAD,EAAA,CAAO,CAAC,KACnD,UAAA;AAAA,EAAcI,KAAA;AAAA,EACdC;AACH,EAAA,CAAA;"}